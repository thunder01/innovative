<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innovative.dao.ReportDao">
	<resultMap type="Report" id="ReportMap">
		<id property="id" column="id"/>
		<result property="approval_id" column="approval_id"/>
		<result property="demand_name" column="demand_name"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="sector" column="sector"/>
		<result property="lable" column="lable" typeHandler="com.innovative.mybatisHandler.ArrayTypeHandler"/>
		<result property="abstracts" column="abstracts"/>
		<result property="type" column="type"/>
		<result property="file" column="file"/>
		<result property="create_date" column="create_date"/>
		<result property="create_by" column="create_by"/>
		<result property="late_date" column="late_date"/>
		<result property="late_by" column="late_by"/>
		<result property="deleted" column="deleted"/>
		<result property="delete_date" column="delete_date"/>
		<result property="delete_by" column="delete_by"/>
	</resultMap>
	
	<!-- 报告的添加 同时把id返回到bean -->
	<insert id="addReport" parameterType="Report">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT currval('xacx_report_v2_id_seq'::regclass)
		</selectKey>
		INSERT INTO xacx_report_v2(approval_id,demand_name,title,content,sector,abstracts,type,file,create_date,create_by,deleted,lable) 
		VALUES(#{approval_id},#{demand_name},#{title},#{content},#{sector},#{abstracts},#{type},#{file},now(),#{create_by},0,
		 <choose>
            <when test="lable != null">
                <foreach item="lable" collection="lable" separator="," open="'{" close="}'" index="">
                    ${lable}
                </foreach>
            </when>
            <otherwise>'{}'</otherwise>
        </choose>
		)
	</insert>
		
	<!-- 更改报告的删除状态 -->
	<update id="updateReportDeleted" parameterType="java.util.Map">
		UPDATE xacx_report_v2 SET deleted = 1 ,delete_date=now(),delete_by=#{userid} WHERE id = #{id} 
	</update>
	
	<!-- 更新报告 -->
	<update id="updateReport" parameterType="Report">
		UPDATE xacx_report_v2 SET title=#{title},content=#{content},sector=
		 <choose>
            <when test="lable != null">
                <foreach item="lable" collection="lable" separator="," open="'{" close="}'" index="">
                    ${lable}
                </foreach>
            </when>
            <otherwise>'{}'</otherwise>
        </choose> 
		,abstracts=#{abstracts},
		file=#{file},lable=#{lable},late_date=now(),late_by=#{late_by} WHERE id=#{id}
	</update>
	
	<!-- 通过报告id查询报告 -->
	<select id="findReportById" parameterType="int" resultMap="ReportMap">
		SELECT * FROM xacx_report_v2 WHERE id = #{id}
	</select>
	
	<!-- 通过立项表单的id和报告的类型来查找报告的集合 分页-->
	<select id="findReportListByApp_id" parameterType="java.util.Map" resultMap="ReportMap">
		SELECT id,approval_id,demand_name,title,content,sector,lable,abstracts,type,file,create_by,create_date,late_by,
		late_date,delete_by,delete_date,delete_status FROM xacx_report_v2 WHERE approval_id=#{approval_id} and type=#{type}
		limit #{pageSize} offset #{startIndex} 
	</select>
	
	<!-- 通过立项表单的id和报告的类型来查找报告总数-->
	<select id="findReportCountByApp_id" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM xacx_report_v2 WHERE approval_id=#{approval_id} and type=#{type}
	</select>	
	
	<!-- 通过订单id来找所有报告并按创建时间排序 -->
	<select id="rankReport" parameterType="int" resultMap="ReportMap">
		SELECT * FROM xacx_report_v2 WHERE EXISTS(SELECT id FROM xacx_project_approval_v2 
		WHERE order_id = #{order_id} AND xacx_report_v2.approval_id= id) ORDER BY xacx_report_v2.create_date DESC
	</select>
</mapper>