<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innovative.dao.UserDao">

<resultMap id="userMap" type="User">
	  <id property="userId" column="UserId" />
	  <result property="userName" column="UserName"/>
	  <result property="userIntegration" column="UserIntegration"/>
	  <result property="userPost" column="UserPost"/>
	  <result property="userSex" column="UserSex"/>
	  <result property="userAge" column="UserAge"/>
	</resultMap> 

 <!--添加用户信息-->
	<insert id="insertUser" parameterType="map">
		INSERT INTO "xacx_user"
		 ("UserId", "UserName",   "UserPost", "CreateAt", "UserSex", "UserAge","Department","JobNumber")
		VALUES 
		(#{userId}, #{userName},  #{userPost}, now(),#{userSex}, #{userAge},#{department},#{jobNumber})
	</insert>


	<!--批量添加用户信息-->
	<insert id="insertUserList" parameterType="java.util.List">
			INSERT INTO "xacx_user"
		 ("UserId", "UserName",   "UserPost", "CreateAt", "UserSex", "UserAge","Department","JobNumber")
		VALUES 
		 <foreach collection="userList" item="item" open="(" separator="),(" close=")">
	        #{item.userId}, #{item.userName},  #{item.userPost}, now(),#{item.userSex}, #{item.userAge}, #{item.department},#{item.jobNumber}
	    </foreach>  
		
	</insert>

	
	 <!--根据id获取用户信息-->
	<select id="getUser" resultType="User">
		SELECT * FROM "xacx_user"  
		  WHERE "UserId" =  #{userId};
	</select>
	
	 <!--根据工号获取用户信息-->
	<select id="getUserByJobNumber" resultType="User">
		SELECT * FROM "xacx_user"  
		  WHERE "JobNumber" =  #{jobNumber};
	</select>


	 <!--根据姓名模糊匹配获取用户信息-->
	<select id="getUserByName" resultType="User">
		WITH RECURSIVE T ("UserName", "UserPost", "Department","orgeh","up_orgeh", PATH, DEPTH)  AS (
		    SELECT e."UserName", e."UserPost", e."Department",e."orgeh",o."up_orgeh", e."UserId"||'/' AS PATH, 1 AS DEPTH
		    FROM xacx_user e LEFT JOIN xacx_user_organization o on e.orgeh = o.orgeh
		    WHERE e."UserName" like  #{name}
		
		    UNION ALL
		
		    SELECT  D."UserName",D."UserPost", D."Department", d."orgeh",org."up_orgeh",T.PATH || D."UserName", T.DEPTH + 1 AS DEPTH
		    FROM xacx_user D LEFT JOIN xacx_user_organization org on d.orgeh = org.orgeh
		    JOIN T ON D."orgeh" = T."up_orgeh" 
		    )
		    SELECT "UserName", "UserPost", "Department", "orgeh","up_orgeh",PATH, DEPTH FROM T
		ORDER BY PATH;
	</select>
	
	
	
	
	<!--修改专家信息-->
	<update id="updateUser" parameterType="User">
		UPDATE "xacx_user"
		<set>
			<if test="userState!=null and userState!=''">
				"UserState" = #{userState},
			</if>
			<if test="updateBy!=null and updateBy!=''">
				"UpdateBy" = #{updateBy},
			</if>
				"UpdateAt" = now()
		</set>
		where "UserId" = #{userId}
	</update>
	
		<!--根据查询条件获取列表-->
	<select id="getUserList" resultType="User">
		SELECT * FROM "xacx_user"
		limit #{pageSize} offset #{startIndex}
	</select>

	<!--查询行业领域搜索条件的总条数-->
	<select id="getTotalCount" resultType="int">
		SELECT count(1) FROM "xacx_user"
	</select>

 <!--根据用户id与角色id获取用户角色信息是否存在-->
	<!-- <select id="getUserRole" resultType="boolean">
		SELECT 1 FROM "app_userrole"  
		  WHERE "UserId" =  #{userId} and "RoleId" = #{roleId};
	</select> -->
	
	<!--根据用户id与权限id获取用户角色信息是否存在-->
	<!-- <select id="getUserRight" resultType="boolean">
		SELECT 1 FROM "app_userrole"  
		  WHERE "UserId" =  #{userId} and "RoleId" = #{roleId};
	</select>
 -->

	

</mapper>