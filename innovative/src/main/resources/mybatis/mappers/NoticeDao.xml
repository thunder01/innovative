<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innovative.dao.NoticeDao">

<resultMap id="noticeMap" type="Notice">
	  <id property="id" column="id" />
	  <result property="content" column="content"/>
	  <result property="createdAt" column="createdAt"/>
	  <result property="createdBy" column="createdBy"/>
	  <result property="deleted" column="deleted"/>
	  <result property="deletedAt" column="deletedAt"/>
	  <result property="deletedBy" column="deletedBy"/>
	  <result property="isActive" column="isActive"/>
	  <result property="rank" column="rank"/>
	  <result property="rowVersion" column="rowVersion"/>
	  <result property="summary" column="summary"/>
	  <result property="title" column="title"/>
	  <result property="updatedAt" column="updatedAt"/>
	  <result property="updatedBy" column="updatedBy"/>
	   <collection property="filelist" ofType="FileBean">  
           <result property="refId" column="refId"/>
           <result property="refType" column="refType"/>
	  	   <result property="url" column="url"/>
	  	   <result property="fileName" column="filename"/>
       </collection> 
	</resultMap> 

	<!--添加公告-->
	<insert id="addNotice" parameterType="map">
		INSERT INTO "Notices"
		("Id","Content", "CreatedAt", "CreatedBy", "Deleted", "DeletedAt", "DeletedBy", "FileName", "IsActive", "Rank", "RowVersion", "Summary", "Tags", "Title", "UpdatedAt", "UpdatedBy", "file")
		VALUES (#{id},#{content}, #{createdAt}, #{createdBy}, #{deleted}, #{createdAt}, #{deletedBy}, #{fileName}, #{isActive}, #{rank}, #{rowVersion}, #{summary}, '${tags}', #{title}, #{createdAt}, #{updatedBy}, #{file})
	</insert>





	<!--公告列表-->
	<select id="getNotices" resultMap="noticeMap">
		SELECT e."Title",e."Id",f."refId",f."refType",f."filename",f."url" FROM "Notices"  e  LEFT JOIN "xacx_file" f on f."refId" = e."Id" and f."refType" = 'gonggaoFile' and f."sign" = 'add' WHERE e."Deleted" = 'f' AND e."IsActive" = 't' ORDER BY e."CreatedAt" DESC
	</select>


	<!--公告逻辑删除-->
	<update id="updateNotice" parameterType="map">
		UPDATE "Notices"
		<set>
			"Title" = #{title}
		</set>
		where "Id"=#{id}
	</update>


	<!--公告逻辑删除-->
	<update id="delNotice" parameterType="String">
		UPDATE "Notices"
		<set>
			"Deleted" = 't',

			"IsActive" = 'f'
		</set>
		where "Id"=#{id}
	</update>



	

</mapper>