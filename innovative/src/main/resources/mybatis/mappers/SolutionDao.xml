<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innovative.dao.SolutionDao">

<resultMap id="solutionMap" type="Solution">
	  <id property="id" column="id" />
	  <result property="content" column="content"/>
	  <result property="createdBy" column="createdBy"/>
	  <result property="createdAt" column="createdAt"/>
	  <result property="deleted" column="deleted"/>
	  <result property="deletedAt" column="deletedAt"/>
	  <result property="deletedBy" column="deletedBy"/>
	  <result property="summary" column="summary"/>
	  <result property="isActive" column="isActive"/>
	  <result property="name" column="name"/>
	  <result property="rank" column="rank"/>
	  <result property="updatedAt" column="updatedAt"/>
	  <result property="updatedBy" column="updatedBy"/>
	  <result property="file" column="file"/>
	  <result property="pictures" column="pictures" />
	  <result property="tags" column="tags" typeHandler="com.innovative.mybatisHandler.ArrayTypeHandler"/>
	  <result property="sectors" column="sectors" typeHandler="com.innovative.mybatisHandler.ArrayTypeHandler"/>
	   <collection property="filelist" ofType="FileBean">  
           <result property="refId" column="refId"/>
           <result property="refType" column="refType"/>
	  	   <result property="url" column="url"/>
	  	   <result property="fileName" column="filename"/>
       </collection> 
	</resultMap> 
    <!--根据id获取技术报告-->
    <select id="getSolutionById" resultMap="solutionMap">
		SELECT "Name","CreatedBy","Summary","Content","Pictures","Sectors","Tags","Rank","Id","File","CreatedAt","UpdatedAt",f."url",f."refId",f."refType",f."filename"
		FROM "Solutions"  e LEFT JOIN "xacx_file" f on f."refId" = e."Id" and f."refType" = 'programFile' and f."sign" = 'add'
		WHERE "Id" =  #{id};
	</select>

  
    <!--根据查询条件获取列表-->
    <select id="getSolutionListByCondition" resultMap="solutionMap">
        SELECT "Name","Summary","Content","Pictures","Sectors","Tags","Rank","Id","File","CreatedAt","UpdatedAt" ,f."url",f."refId",f."refType",f."filename" FROM "Solutions" e
          LEFT JOIN "xacx_file" f on f."refId" = e."Id" and f."refType" = 'programFile' and f."sign" = 'add'
        <where>
              1=1
			<if test="sectors!='{null}' and sectors!='{}'and sectors!='{NULL}' and sectors!='{undefined}' and sectors!='' and sectors!=null">
				and e."Sectors" @> '${sectors}' 
			</if>
			<if test="key1!='%%' and key1!='%null%'  and key1!='%undefined%'">
				and (
					e."Summary" LIKE #{key1} or 
					e."Content" LIKE #{key1} 
					<if test="key2!='{}' and key2!='{null}' and key2!='{undefined}'">
					 OR e."Sectors" @> '${key2}'
					</if>
					)
			</if>
			and "Deleted" = 'f' AND "IsActive" = 't'
        </where>
        order by e."UpdatedAt"  DESC 
        limit #{pageSize} offset #{startIndex}
    </select>

    <!--条件查询获取总条数-->
    <select id="getCountByCondition" resultType="int">
        SELECT COUNT("Id") FROM "Solutions"
        <where>
               1=1
			<if test="sectors!='{null}' and sectors!='{}'and sectors!='{NULL}' and sectors!='{undefined}' and sectors!='' and sectors!=null">
				and "Sectors" @> '${sectors}' 
			</if>
			<if test="key1!='%%' and key1!='%null%'  and key1!='%undefined%'">
				and (
					"Summary" LIKE #{key1} or 
					"Content" LIKE #{key1} 
					<if test="key2!='{}' and key2!='{null}' and key2!='{undefined}'">
					 OR "Sectors" @> '${key2}'
					</if>
					)
			</if>
            and "Deleted" = 'f' AND "IsActive" = 't'
        </where>
    </select>

    <!--新增技术报告-->
    <insert id="insertSolution" parameterType="Solution">
        INSERT INTO "Solutions" ("Id", "Name", "Summary", "Content", "Sectors", "Tags", "Rank", "IsActive", "File", "Pictures", "CreatedBy", "RowVersion", "CreatedAt","Deleted") VALUES
         (#{id}, #{name}, #{summary}, #{content}, 
         		<choose>
					<when test="sectors != null">
						<foreach item="sector" collection="sectors" separator="," open="'{" close="}'," index="">  
					      ${sector}
					    </foreach>  
					</when>
					<otherwise>null,</otherwise>
				</choose>
				<choose>
					<when test="tags != null">
						<foreach item="tag" collection="tags" separator="," open="'{" close="}'," index="">  
					      ${tag}
					    </foreach>  
					</when>
					<otherwise>null,</otherwise>
				</choose>
          #{rank}, true, '${file}', 
          	#{pictures},
           #{createdBy}, 0, now(),false)
    </insert>

    <!--修改技术报告-->
    <update id="updateSolution" parameterType="Solution">
        UPDATE "Solutions"
        <set>
            <if test="name != null and name != ''">
                "Name" = #{name},
            </if>
            <if test="summary != null and summary != ''">
                "Summary" = #{summary},
            </if>
            <if test="content != null and content != ''">
                "Content" = #{content},
            </if>
           <if test="sectors!=null and sectors!=''">
				"Sectors"=
				<choose>
					<when test="sectors != null">
						<foreach item="sector" collection="sectors" separator="," open="'{" close="}'," index="">  
					      ${sector}
					    </foreach>  
					</when>
					<otherwise>null,</otherwise>
				</choose>
			</if>
			<if test="tags!=null and tags!=''">
				"Tags"=
				<choose>
					<when test="tags != null">
						<foreach item="tag" collection="tags" separator="," open="'{" close="}'," index="">  
					      ${tag}
					    </foreach>  
					</when>
				</choose>
			</if>
            <if test="rank != null and rank != ''">
                "Rank" = #{rank},
            </if>
            <if test="isActive != null and isActive != ''">
                "IsActive" = #{isActive},
            </if>
            <!-- <if test="newId != null and newId != ''">
                "Id" = #{newId},
            </if> -->
            "UpdatedAt" = now()
        </set>
        <where>
            "Id" = #{id}
        </where>
    </update>
    
    <!--删除组织机构-->
	<delete id="deleteSolution" parameterType="map">
		delete from "Solutions"
		<where>
			 "Id"=#{id}
		</where>
	</delete>

</mapper>