<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innovative.dao.SectionsDao">

	<resultMap id="sectionsMap" type="Sections">
	  <id property="id" column="id" />
	  <result property="resource" column="resource"/>
	  <result property="title" column="title"/>
	  <result property="time" column="time"/>
	  <result property="resume" column="resume"/>
	  <result property="cotent" column="cotent"/>
	  <result property="createAt" column="createAt"/>
	  <result property="createBy" column="createBy"/>
	  <result property="updateAt" column="updateAt"/>
	  <result property="updateBy" column="updateBy"/>
	  <result property="updateByC" column="updateByC"/>
	  <result property="tags" column="tags" typeHandler="com.innovative.mybatisHandler.ArrayTypeHandler"/>
	  <result property="sectors" column="sectors" typeHandler="com.innovative.mybatisHandler.ArrayTypeHandler"/>
	  <result property="state" column="state"/>
	  <result property="approuverNum" column="approuverNum"/>
	  <result property="todayIsApprouver" column="todayIsApprouver"/> 
	  <result property="isCollection" column="isCollection"/>
	  <result property="imgid" column="imgid"/>
	  <result property="count" column="count"/>
	  <result property="imgUrl" column="imgurl"/>
	  <result property="firstid" column="firstid"/>
      <result property="type" column="type"/>
       <result property="types" column="types"/>
	</resultMap> 
	
    <!--添加科技专栏信息-->
    <insert id="addSection" parameterType="map">
       INSERT INTO "xacx_tech_sections" 
       ("id", "resource", "title", "time", "resume", "sectors", "tags", "cotent", "createAt", "createBy", "updateAt", "updateBy", "state","imgid","count","imgurl","firstid","type")
       VALUES
       (#{id}, #{resource}, #{title}, #{time}, #{resume},
        <choose>
			<when test="sectors != null">
				<foreach item="sector" collection="sectors" separator="," open="'{" close="}'," index="">  
			      ${sector}
			    </foreach>  
			</when>
			<otherwise>'{}',</otherwise>
		</choose>
		<choose>
			<when test="tags != null">
				<foreach item="tag" collection="tags" separator="," open="'{" close="}'," index="">  
			      ${tag}
			    </foreach>  
			</when>
			<otherwise>'{}',</otherwise>
		</choose>
         #{cotent}, now(), #{createBy}, now(), #{updateBy},'2',#{imgid},0,#{imgUrl},#{firstid},#{type});

    </insert>
    
    <!--修改科技资讯-->
	<update id="updateSection" parameterType="map">
		UPDATE "xacx_tech_sections"
		<set>
			<if test="resource!=null and resource!=''">
				"resource"=#{resource},
			</if>
			<if test="title!=null and title!=''">
				"title"=#{title},
			</if>
			<if test="time!=null and time!=''">
				"time"=#{time},
			</if>
			<if test="resume!=null and resume!=''">
				"resume"=#{resume},
			</if>
			<if test="sectors!=null and sectors!=''">
				"sectors"=
				<choose>
					<when test="sectors != null">
						<foreach item="sector" collection="sectors" separator="," open="'{" close="}'," index="">  
					      ${sector}
					    </foreach>  
					</when>
					<otherwise>'{}',</otherwise>
				</choose>
			</if>
			<if test="tags!=null and tags!=''">
				"tags"=
				<choose>
					<when test="tags != null">
						<foreach item="tag" collection="tags" separator="," open="'{" close="}'," index="">  
					      ${tag}
					    </foreach>  
					</when>
					<otherwise>'{}',</otherwise>
				</choose>
			</if>
			<if test="cotent!=null and cotent!=''">
				"cotent"=#{cotent},
			</if>
			<if test="state!=null and state!=''">
				"state"=#{state},
			</if>
			<if test="updateBy!=null and updateBy!=''">
				"updateBy"=#{updateBy},
			</if>
			<if test="imgid!=null and imgid!=''">
				"imgid"=#{imgid},
			</if>
			<if test="imgUrl!=null and imgUrl!=''">
				"imgurl"=#{imgUrl},
			</if>
				"updateAt"=now()
		</set>
		where "id"=#{id}
	</update>
	
	
	 <!--根据id获取科技专栏-->
	<select id="getSectionById" resultMap="sectionsMap">
		SELECT "id", "resource", "title", "time", "resume", "sectors", "tags", "cotent", "createAt", "createBy", "updateAt", "updateBy", "state", "imgid", "count","imgurl" FROM "xacx_tech_sections" 
		 WHERE "id" =  #{id} ;
	</select>
	
	<!--根据查询条件获取列表-->
	<select id="getSectionsLists" resultMap="sectionsMap">
		SELECT * FROM sections_list
		<where>
			<if test="state!=null and state!=''">
				"state" = #{state}
			</if>
		</where>
		order by "state" asc, "updateAt" DESC
		limit #{pageSize} offset #{startIndex}
	</select>



	<!--查询行业领域搜索条件的总条数-->
	<select id="getTotalCountNum" resultType="int">
		SELECT count(*) FROM sections_list
		<where>
			<if test="state!=null and state!=''">
				"state" = #{state}
			</if>
		</where>
	</select>
	
	
	
	<!--删除科技专栏-->
	<delete id="deleteSection" parameterType="String">
		delete from "xacx_tech_sections"
		<where>
			 "id"=#{id}
		</where>
	</delete>
	
	<!-- 审批 ，通过则把state置为1 -->
	<update id="approvalSections" parameterType="String">
		update "xacx_tech_sections" set "state"='1' where "id"=#{id}
	</update>
	
	<!-- 修改科技专栏点击次数 -->
	<update id="updateSectionApprouverNum" parameterType="map">
		UPDATE "xacx_tech_sections" set "approuverNum" = "approuverNum" + 1
		where "id"=#{id}
	</update>
	
	 <!--根据id获取科技专栏-->
	<select id="getSectionByIdAndUserid" parameterType="map" resultMap="sectionsMap">

     
 		
	SELECT info."id", "resource", "title", "time", "resume", "sectors", "tags", "cotent", info."createAt", 
		  info."createBy", info."updateAt", info."updateBy", info."state" ,"approuverNum" , "imgid", "count","imgurl", us.username updateByC,e.todayIsApprouver,co.isCollection
		FROM "xacx_tech_sections" info
		 left join 
		(SELECT count(*) todayIsApprouver,"sectionId" FROM "xacx_tech_section_approuver" where "approuverBy" = #{userid}
		
		and to_date(cast("approuverAt" as TEXT),'yyyy-mm-dd') = current_date group by "sectionId"	) e on e."sectionId" = info."id"

       left join (SELECT count(*) isCollection,"sectionId" FROM "xacx_tech_sections_collection" where "collectBy" =  #{userid}
		
		group by "sectionId"	) co on co."sectionId" = info."id"

 	left join xacx_user us on us.pernr = info."updateBy"

		where info."id" = #{id}
	</select>
	
	<!-- 点击量变更，每访问一次详情页面，则数量加1 -->
	<update id="countUpdate" parameterType="Sections">
		update "xacx_tech_sections" set "count"=#{count} where "id"=#{id}
	</update>

	<!--根据firstid获取id -->
	<select id="getIdByFirstId" parameterType="map" resultType="string">
		SELECT id FROM xacx_tech_sections WHERE firstid=#{firstid} and type=#{type}
	</select>
</mapper>